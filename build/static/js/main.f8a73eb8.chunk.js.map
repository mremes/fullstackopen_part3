{"version":3,"sources":["components/Contacts.js","services/phonebookService.js","App.js","index.js"],"names":["ListingFilter","_ref","handler","react_default","a","createElement","onChange","AddPersonForm","_ref2","formHandler","name","nameHandler","phoneNum","phoneNumHandler","onSubmit","value","type","PersonListing","_ref3","persons","deleteHandler","map","p","key","id","phone","onClick","getIdUrl","concat","createPerson","person","axios","post","then","response","data","updatePerson","put","Notification","message","className","setTimeout","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newPhoneNum","setNewPhoneNum","_useState7","_useState8","nameFilter","setNameFilter","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","successMessage","setSuccessMessage","useEffect","get","handlePersonUpdates","serviceFn","oldPersons","newPerson","sort","b","catch","err","console","log","personsList","filter","toLowerCase","startsWith","forEach","Contacts_ListingFilter","event","target","App_Notification","Contacts_AddPersonForm","preventDefault","length","existingPerson","find","window","confirm","objectSpread","Contacts_PersonListing","personId","personName","delete","_","includes","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f8a73eb8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ListingFilter = ({ handler }) => {\n    return (<div>\n        <form>\n            rajaa näytettäviä: <input onChange={handler} />\n        </form>\n    </div>)\n}\n\nexport const AddPersonForm = ({ formHandler, name, nameHandler, phoneNum, phoneNumHandler }) => {\n    return (<div>\n        <form onSubmit={formHandler}>\n            <div>\n                nimi: <input value={name} onChange={nameHandler} /> <br />\n                puhelinnumero: <input value={phoneNum} onChange={phoneNumHandler} />\n            </div>\n            <div>\n                <button type=\"submit\">lisää</button>\n            </div>\n        </form>\n    </div>)\n}\n\nexport const PersonListing = ({ persons, deleteHandler }) => {\n    return (<div>\n        {persons.map(p => <li key={p.id}>{p.name} {p.phone} <button id={p.id} onClick={deleteHandler}>poista</button></li>)}\n    </div>)\n}","import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\n\nconst getIdUrl = (id) => `${baseUrl}/${id}`\nexport const getAll = () => {\n    let request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nexport const createPerson = (person) => {\n    let request = axios.post(baseUrl, person);\n    return request.then(response => response.data);\n}\n\nexport const deletePerson = (personId) => {\n    let request = axios.delete(getIdUrl(personId));\n    return request.then(response => response.data);\n}\n\nexport const updatePerson = (person) => {\n    let request = axios.put(getIdUrl(person.id), person);\n    return request.then(response => response.data);\n}","import React, { useState, useEffect } from 'react';\nimport { ListingFilter, AddPersonForm, PersonListing } from './components/Contacts'\nimport { getAll, createPerson, deletePerson, updatePerson } from './services/phonebookService'\n\nconst Notification = ({ message, handler, className }) => {\n  if (message === '') {\n    return null\n  }\n\n  setTimeout(() => handler(''), 3000);\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNum, setNewPhoneNum] = useState('');\n  const [nameFilter, setNameFilter] = useState('');\n  const [errorMessage, setErrorMessage] = useState('')\n  const [successMessage, setSuccessMessage] = useState('')\n\n  useEffect(() => getAll().then(persons => setPersons(persons)), []);\n\n  const handleNameFilter = (event) => setNameFilter(event.target.value.toLowerCase());\n  const handleNewName = (event) => setNewName(event.target.value);\n  const handleNewPhoneNum = (event) => setNewPhoneNum(event.target.value);\n\n  const handlePersonUpdates = (serviceFn, oldPersons, newPerson) => {\n    serviceFn(newPerson).then(p => {\n      setPersons(oldPersons.concat(newPerson).sort((a, b) => a.id - b.id));\n      setNewName('');\n      setNewPhoneNum('');\n    }).catch(err => console.log(err));\n  };\n\n  const handleSubmitPerson = (event) => {\n    event.preventDefault();\n\n    if (newName.length === 0) return setErrorMessage('tyhjä nimi');\n    let existingPerson = persons.find(p => p.name === newName);\n\n    if (existingPerson && existingPerson.phone === newPhoneNum) {\n      return setErrorMessage(`${newName} on jo luettelossa`);\n    }\n    else if (existingPerson && window.confirm(`${existingPerson.name} on jo luettelossa. Korvataanko vanha numero uudella?`)) {\n      setSuccessMessage(`Päivitettiin henkilön ${person.name} puhelinnumero.`)\n      return handlePersonUpdates(updatePerson,\n        persons.filter(p => p.id !== existingPerson.id),\n        { ...existingPerson, phone: newPhoneNum });\n    }\n    else if (existingPerson) {\n      return;\n    }\n\n    let person = { name: newName };\n\n    if (newPhoneNum.length > 0) {\n      person.phone = newPhoneNum;\n    }\n    handlePersonUpdates(createPerson, persons, person);\n    setSuccessMessage(`Lisättiin ${person.name}`)\n  };\n\n  const handleDeletePerson = (event) => {\n    let id = event.target.id;\n    console.log(id);\n    console.log(persons)\n    let personName = persons.find(p => p.id == id).name;\n    let confirm = window.confirm(`Poistetaanko ${personName}?`);\n    if (confirm) {\n      deletePerson(id).then(_ => {\n        setPersons(persons.filter(p => p.id != id));\n        setSuccessMessage(`Henkilö ${personName} poistettiin onnistuneesti.`);\n      }).catch(err => {\n        console.log(err);\n        if (err.message.includes('404')) setErrorMessage(`Henkilö ${personName} on jo poistettu.`);\n        else setErrorMessage(`Tuntematon virhe.`);\n      });\n    }\n  };\n\n  let personsList = persons.filter(p => p.name.toLowerCase().startsWith(nameFilter));\n  personsList.forEach(p => p.phone = p.phone || 'N/A');\n\n  return (\n    <div>\n      <h2>puhelinluettelo</h2>\n      <ListingFilter handler={handleNameFilter} />\n      <h2>lisää uusi</h2>\n      <Notification message={errorMessage} handler={setErrorMessage} className=\"error\" />\n      <Notification message={successMessage} handler={setSuccessMessage} className=\"success\" />\n      <AddPersonForm formHandler={handleSubmitPerson} name={newName}\n        nameHandler={handleNewName} phoneNum={newPhoneNum}\n        phoneNumHandler={handleNewPhoneNum} />\n      <h2>numerot</h2>\n      <PersonListing persons={personsList} deleteHandler={handleDeletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}