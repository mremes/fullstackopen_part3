{"version":3,"sources":["components/Contacts.js","services/phonebookService.js","App.js","index.js"],"names":["ListingFilter","_ref","handler","react_default","a","createElement","onChange","AddPersonForm","_ref2","formHandler","name","nameHandler","phoneNum","phoneNumHandler","onSubmit","value","type","PersonListing","_ref3","persons","deleteHandler","map","p","key","id","phone","onClick","getIdUrl","concat","createPerson","person","axios","post","then","response","data","updatePerson","put","Notification","message","className","setTimeout","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newPhoneNum","setNewPhoneNum","_useState7","_useState8","nameFilter","setNameFilter","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","successMessage","setSuccessMessage","useEffect","get","handlePersonUpdates","serviceFn","oldPersons","newPerson","sort","b","catch","err","personsList","filter","toLowerCase","startsWith","forEach","Contacts_ListingFilter","event","target","App_Notification","Contacts_AddPersonForm","preventDefault","length","existingPerson","find","window","confirm","objectSpread","Contacts_PersonListing","personId","personName","delete","_","includes","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9fc25b38.chunk.js","sourcesContent":["import React from 'react'\n\nexport const ListingFilter = ({ handler }) => {\n  return (<div>\n    <form>\n      rajaa näytettäviä: <input onChange={handler} />\n    </form>\n  </div>)\n}\n\nexport const AddPersonForm = ({ formHandler, name, nameHandler, phoneNum, phoneNumHandler }) => {\n  return (<div>\n    <form onSubmit={formHandler}>\n      <div>\n        nimi: <input value={name} onChange={nameHandler} /> <br />\n        puhelinnumero: <input value={phoneNum} onChange={phoneNumHandler} />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  </div>)\n}\n\nexport const PersonListing = ({ persons, deleteHandler }) => {\n  return (<div>\n    {persons.map(p => <li key={p.id}>{p.name} {p.phone} <button id={p.id} onClick={deleteHandler}>poista</button></li>)}\n  </div>)\n}","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\nconst getIdUrl = (id) => `${baseUrl}/${id}`\n\nexport const getAll = () => {\n  let request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport const createPerson = (person) => {\n  let request = axios.post(baseUrl, person)\n  return request.then(response => response.data)\n}\n\nexport const deletePerson = (personId) => {\n  let request = axios.delete(getIdUrl(personId))\n  return request.then(response => response.data)\n}\n\nexport const updatePerson = (person) => {\n  let request = axios.put(getIdUrl(person.id), person)\n  return request.then(response => response.data)\n}","import React, { useState, useEffect } from 'react'\nimport { ListingFilter, AddPersonForm, PersonListing } from './components/Contacts'\nimport { getAll, createPerson, deletePerson, updatePerson } from './services/phonebookService'\n\nconst Notification = ({ message, handler, className }) => {\n  if (message === '') {\n    return null\n  }\n\n  setTimeout(() => handler(''), 3000)\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhoneNum, setNewPhoneNum] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [successMessage, setSuccessMessage] = useState('')\n\n  useEffect(() => getAll().then(persons => setPersons(persons)), [])\n\n  const handleNameFilter = (event) => setNameFilter(event.target.value.toLowerCase())\n  const handleNewName = (event) => setNewName(event.target.value)\n  const handleNewPhoneNum = (event) => setNewPhoneNum(event.target.value)\n\n  const handlePersonUpdates = (serviceFn, oldPersons, newPerson) => {\n    serviceFn(newPerson).then(p => {\n      setPersons(oldPersons.concat(newPerson).sort((a, b) => a.id - b.id))\n      setNewName('')\n      setNewPhoneNum('')\n      setSuccessMessage(`Lisättiin ${newPerson.name}`)\n    }).catch(err => {\n      setErrorMessage(`Virhe: ${err.response.data.message}`)\n    })\n  }\n\n  const handleSubmitPerson = (event) => {\n    event.preventDefault()\n\n    if (newName.length === 0)\n      return setErrorMessage('tyhjä nimi')\n      \n    const existingPerson = persons.find(p => p.name === newName)\n\n    if (existingPerson && existingPerson.phone === newPhoneNum)\n      return setErrorMessage(`${newName} on jo luettelossa`)\n    else if (existingPerson && window.confirm(`${existingPerson.name} on jo luettelossa. Korvataanko vanha numero uudella?`) ) {\n      const res = handlePersonUpdates(updatePerson,\n        persons.filter(p => p.id !== existingPerson.id),\n        { ...existingPerson, phone: newPhoneNum })\n      if (res) {\n        setSuccessMessage(`Päivitettiin henkilön ${person.name} puhelinnumero.`)\n      }\n    }\n\n    const person = { name: newName }\n\n    if (newPhoneNum.length > 0) {\n      person.phone = newPhoneNum\n    }\n\n    handlePersonUpdates(createPerson, persons, person)\n  }\n\n  const handleDeletePerson = (event) => {\n    let id = event.target.id\n    let personName = persons.find(p => p.id == id).name\n    \n    if (window.confirm(`Poistetaanko ${personName}?`)) {\n      deletePerson(id).then(_ => {\n        setPersons(persons.filter(p => p.id != id))\n        setSuccessMessage(`Henkilö ${personName} poistettiin onnistuneesti.`)\n      }).catch(err => {\n        if (err.message.includes('404'))\n          return setErrorMessage(`Henkilö ${personName} on jo poistettu.`)\n        setErrorMessage('Tuntematon virhe.')\n      })\n    }\n  }\n\n  let personsList = persons.filter(p => p.name.toLowerCase().startsWith(nameFilter))\n  personsList.forEach(p => p.phone = p.phone || 'N/A')\n\n  return (\n    <div>\n      <h2>puhelinluettelo</h2>\n      <ListingFilter handler={handleNameFilter} />\n      <h2>lisää uusi</h2>\n      <Notification message={errorMessage} handler={setErrorMessage} className=\"error\" />\n      <Notification message={successMessage} handler={setSuccessMessage} className=\"success\" />\n      <AddPersonForm formHandler={handleSubmitPerson} name={newName}\n        nameHandler={handleNewName} phoneNum={newPhoneNum}\n        phoneNumHandler={handleNewPhoneNum} />\n      <h2>numerot</h2>\n      <PersonListing persons={personsList} deleteHandler={handleDeletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}